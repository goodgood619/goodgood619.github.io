I"H<ol>
  <li>맨 앞에 0을 집어넣은다음, 현재 링크드리스트에 연결을 시킨다</li>
  <li>그다음 전체 길이를 구한다. 그러면 원래 길이가 k면 k+1이 된다</li>
  <li>그다음 k+1에서 n을뺀다음에 1개가 추가가 되었기 때문에, rest가 2가 될때까지 빼준다(n-1번째 노드까지 가면된다)</li>
  <li>그다음 현재 위치(n-1번째노드)의 다음번째를 다음번째(n+1)로 연결시킨다</li>
  <li>대입으로 같은 reference를 공유하고 있기 때문에 처음의 헤드의 next를 리턴시킨다</li>
</ol>

<h2 id="by-java">by Java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nc">ListNode</span> <span class="nf">removeNthFromEnd</span><span class="o">(</span><span class="nc">ListNode</span> <span class="n">head</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ListNode</span> <span class="n">temp</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ListNode</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span> <span class="c1">// 0을 넣는다</span>
        <span class="n">temp</span><span class="o">.</span><span class="na">next</span> <span class="o">=</span> <span class="n">head</span><span class="o">;</span> <span class="c1">// head를 연결</span>
        <span class="nc">ListNode</span> <span class="n">first</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">totalsize</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">first</span><span class="o">!=</span><span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">totalsize</span><span class="o">++;</span>
            <span class="n">first</span> <span class="o">=</span> <span class="n">first</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">rest</span> <span class="o">=</span> <span class="n">totalsize</span> <span class="o">-</span> <span class="n">n</span><span class="o">;</span>
        <span class="n">first</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">rest</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">first</span> <span class="o">=</span> <span class="n">first</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
            <span class="n">rest</span><span class="o">--;</span>
        <span class="o">}</span>
        <span class="n">first</span><span class="o">.</span><span class="na">next</span> <span class="o">=</span> <span class="n">first</span><span class="o">.</span><span class="na">next</span><span class="o">.</span><span class="na">next</span><span class="o">;</span> <span class="c1">// n-1번째노드의 다음을 n+1번째노드로 연결, 여기서 first는 n-1번째노드</span>
        <span class="k">return</span> <span class="n">temp</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET