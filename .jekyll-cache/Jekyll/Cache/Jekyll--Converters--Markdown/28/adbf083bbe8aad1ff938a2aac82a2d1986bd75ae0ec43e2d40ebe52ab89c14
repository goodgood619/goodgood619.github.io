I"2<p>BFS문제인데, 조건을 break문을 넣어가지고, 제대로 탐색이 안됐었다.</p>

<p><strong>O인 지점에서 BFS를 진행</strong>하되, X로 바꿔야 하는 조건은 <strong>O인 것만 탐색을 하되 경계선까지 가지 않았을때</strong>만 X로 바꿔야 하는 문제이다</p>

<h2 id="by-java">by Java</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kt">int</span><span class="o">[]</span> <span class="n">gox</span> <span class="o">=</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">,-</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">};</span>
    <span class="kt">int</span><span class="o">[]</span> <span class="n">goy</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">,-</span><span class="mi">1</span><span class="o">};</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">solve</span><span class="o">(</span><span class="kt">char</span><span class="o">[][]</span> <span class="n">board</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
        <span class="kt">boolean</span><span class="o">[][]</span> <span class="n">visited</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">][</span><span class="n">board</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">visited</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="sc">'O'</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nc">List</span><span class="o">&lt;</span><span class="no">P</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span><span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
                    <span class="kt">boolean</span> <span class="n">ret</span> <span class="o">=</span><span class="n">bfs</span><span class="o">(</span><span class="n">i</span><span class="o">,</span><span class="n">j</span><span class="o">,</span><span class="n">board</span><span class="o">,</span><span class="n">list</span><span class="o">,</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">,</span><span class="n">board</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">,</span><span class="n">visited</span><span class="o">);</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">ret</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">for</span><span class="o">(</span><span class="no">P</span> <span class="n">ele</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
                            <span class="n">board</span><span class="o">[</span><span class="n">ele</span><span class="o">.</span><span class="na">x</span><span class="o">][</span><span class="n">ele</span><span class="o">.</span><span class="na">y</span><span class="o">]=</span><span class="sc">'X'</span><span class="o">;</span>
                        <span class="o">}</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">bfs</span><span class="o">(</span><span class="kt">int</span> <span class="n">sx</span><span class="o">,</span><span class="kt">int</span> <span class="n">sy</span><span class="o">,</span><span class="kt">char</span><span class="o">[][]</span> <span class="n">board</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="no">P</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">,</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span><span class="kt">int</span> <span class="n">m</span><span class="o">,</span><span class="kt">boolean</span><span class="o">[][]</span> <span class="n">visited</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Deque</span><span class="o">&lt;</span><span class="no">P</span><span class="o">&gt;</span> <span class="n">q</span><span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayDeque</span><span class="o">&lt;&gt;();</span>
        <span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="no">P</span><span class="o">(</span><span class="n">sx</span><span class="o">,</span><span class="n">sy</span><span class="o">));</span>
        <span class="n">visited</span><span class="o">[</span><span class="n">sx</span><span class="o">][</span><span class="n">sy</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="no">P</span><span class="o">(</span><span class="n">sx</span><span class="o">,</span><span class="n">sy</span><span class="o">));</span>
        <span class="kt">boolean</span> <span class="n">check</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(!</span><span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">peek</span><span class="o">().</span><span class="na">x</span><span class="o">;</span>
            <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">peek</span><span class="o">().</span><span class="na">y</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">x</span><span class="o">==</span><span class="mi">0</span> <span class="o">||</span> <span class="n">x</span><span class="o">==</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="n">y</span><span class="o">==</span><span class="mi">0</span> <span class="o">||</span> <span class="n">y</span><span class="o">==</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">check</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
				<span class="c1">// break;</span>
            <span class="o">}</span>
            <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">4</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">nx</span> <span class="o">=</span> <span class="n">x</span><span class="o">+</span><span class="n">gox</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">ny</span><span class="o">=</span><span class="n">y</span><span class="o">+</span><span class="n">goy</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
                <span class="k">if</span><span class="o">(</span><span class="n">nx</span><span class="o">&lt;</span><span class="mi">0</span> <span class="o">||</span> <span class="n">nx</span><span class="o">&gt;=</span><span class="n">n</span> <span class="o">||</span> <span class="n">ny</span><span class="o">&lt;</span><span class="mi">0</span> <span class="o">||</span> <span class="n">ny</span><span class="o">&gt;=</span><span class="n">m</span> <span class="o">||</span> <span class="n">visited</span><span class="o">[</span><span class="n">nx</span><span class="o">][</span><span class="n">ny</span><span class="o">]</span> <span class="o">||</span> <span class="n">board</span><span class="o">[</span><span class="n">nx</span><span class="o">][</span><span class="n">ny</span><span class="o">]==</span><span class="sc">'X'</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
                <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="no">P</span><span class="o">(</span><span class="n">nx</span><span class="o">,</span><span class="n">ny</span><span class="o">));</span>
                <span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="no">P</span><span class="o">(</span><span class="n">nx</span><span class="o">,</span><span class="n">ny</span><span class="o">));</span>
                <span class="n">visited</span><span class="o">[</span><span class="n">nx</span><span class="o">][</span><span class="n">ny</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">check</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="kd">class</span> <span class="nc">P</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="o">;</span>
    <span class="no">P</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET