I"<'<ol>
  <li>Stack(Deque)를 이용하여 l1과 l2에 있는 원소들을 각각 Deque1, Deque2에 넣어준다</li>
  <li>그다음 뒤에서부터 새로운 Deque3에 계속 더한다, 단 올림수가 발생할수 있기 때문에 carry 변수를 하나 둬서 관리를 한다</li>
  <li>l1 혹은 l2의 길이가 일치 하지 않을수 있기 때문에, Deque1과 Deque2의 원소를 끝까지 뽑아낸다</li>
  <li>단 올림수가 여전히 발생할수 있기 때문에, 올림수에 관한 예외처리가 필요하다</li>
  <li>Deque3에 있는 값을 뒤에서부터 뽑아내면서 새롭게 ListNode를 만들어 반환한다</li>
</ol>

<h2 id="by-java">by Java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nc">ListNode</span> <span class="nf">addTwoNumbers</span><span class="o">(</span><span class="nc">ListNode</span> <span class="n">l1</span><span class="o">,</span> <span class="nc">ListNode</span> <span class="n">l2</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Deque</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">first</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayDeque</span><span class="o">&lt;&gt;();</span>
        <span class="nc">Deque</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">second</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayDeque</span><span class="o">&lt;&gt;();</span>
        <span class="nc">ListNode</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">l1</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">temp</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">first</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">temp</span><span class="o">.</span><span class="na">val</span><span class="o">);</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">temp</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="n">temp</span> <span class="o">=</span> <span class="n">l2</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">temp</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">second</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">temp</span><span class="o">.</span><span class="na">val</span><span class="o">);</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">temp</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="nc">Deque</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">three</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayDeque</span><span class="o">&lt;&gt;();</span>
        <span class="kt">int</span> <span class="n">carry</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">first</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">second</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="n">first</span><span class="o">.</span><span class="na">pollLast</span><span class="o">()+</span> <span class="n">second</span><span class="o">.</span><span class="na">pollLast</span><span class="o">()+</span><span class="n">carry</span><span class="o">;</span>
            <span class="n">three</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">value</span><span class="o">%</span><span class="mi">10</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">value</span><span class="o">&gt;=</span><span class="mi">10</span><span class="o">)</span> <span class="n">carry</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">carry</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">while</span><span class="o">(</span><span class="n">first</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="n">first</span><span class="o">.</span><span class="na">pollLast</span><span class="o">()</span> <span class="o">+</span> <span class="n">carry</span><span class="o">;</span>
            <span class="n">three</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">value</span><span class="o">%</span><span class="mi">10</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">value</span><span class="o">&gt;=</span><span class="mi">10</span><span class="o">)</span> <span class="n">carry</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">carry</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">while</span><span class="o">(</span><span class="n">second</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="n">second</span><span class="o">.</span><span class="na">pollLast</span><span class="o">()</span> <span class="o">+</span> <span class="n">carry</span><span class="o">;</span>
            <span class="n">three</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">value</span><span class="o">%</span><span class="mi">10</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">value</span><span class="o">&gt;=</span><span class="mi">10</span><span class="o">)</span> <span class="n">carry</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">carry</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">carry</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">three</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carry</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="nc">ListNode</span> <span class="n">ans</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">ListNode</span> <span class="n">cur</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">three</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">val</span> <span class="o">=</span> <span class="n">three</span><span class="o">.</span><span class="na">pollLast</span><span class="o">();</span>
            <span class="k">if</span><span class="o">(</span><span class="n">cur</span><span class="o">==</span><span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">cur</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ListNode</span><span class="o">(</span><span class="n">val</span><span class="o">);</span>
                <span class="n">ans</span> <span class="o">=</span> <span class="n">cur</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="n">cur</span><span class="o">.</span><span class="na">next</span><span class="o">=</span> <span class="k">new</span> <span class="nc">ListNode</span><span class="o">(</span><span class="n">val</span><span class="o">);</span>
                <span class="n">cur</span> <span class="o">=</span> <span class="n">cur</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">ans</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET